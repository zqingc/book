{"./":{"url":"./","title":"前言","keywords":"","body":"前言 嘿嘿，大家好，这里是清字派的笔记屋！ "},"git/":{"url":"git/","title":"GIT","summary":"GIT","keywords":"","body":"GIt 这里记录Git版本管理 "},"git/di-yi-jie.html":{"url":"git/di-yi-jie.html","title":"Git使用规范","summary":"Git使用规范","keywords":"","body":"Git使用规范 一. Windows上安装Git 访问官网https://git-scm.com/download/win下载对应版本的安装包。安装完成后，从开始菜单--->Git--->Git Bash，打开命令行工具。为了确认是否安装成功，我们执行version命令，如果正常显示Git的版本号就表示Git已经成功安装了。 git --version 输出：git version 2.9.0.windows.1 二. Git 全局设置 1.初始配置 在使用Git之前，我们对Git做一个初始配置，我们需要设置用户名和电子邮箱。以便之后我们提交了代码后，Git能跟踪和标记是谁做了修改。在命令行工具中，依次执行如下命令进行设置： git config --global user.name \"\" git config --global user.email \"\" 注意：替换掉命令中的和，注意保留命令中的双引号。强烈推荐您使用与远程代码库中相同的用户名和电子邮箱配置完成后，我们也可以执行以下命令进行查看： git config --global user.name git config --global user.email 2.Windows控制台无法显示中文 Windows上的控制台遇到中文名称的时候会显示为类似\"\\346\\226\\260\\350\\246...\"这样的字符，执行以下命令让它显示出正确的中文： git config --global core.quotepath off 3.Windows上拉取的文件编程修改状态 问题： 在Windows系统上，可能会遇到，从git上拉取服务端代码后，发现新拉取的文件都编程修改状态。这是git自动转换换行符导致的问题。 原因： 不同操作系统使用的换行符是不一样的。Unix/Linux使用的是LF，Mac后期也采用了LF，但Windows一直使用CRLF【回车(CR, ASCII 13, \\r) 换行(LF, ASCII 10, \\n)】作为换行符。而git入库的代码采用的是LF格式，它考虑到了跨平台协作的场景，提供了“换行符自动转换”的功能：如果在Windows下安装git，在拉取文件时，会自动将LF换行符替换为CRLF；在提交时，又会将CRLF转回LF。但是这个转换是有问题的：有时提交时，CRLF转回LF可能会不工作，尤其是文件中出现中文字符后有换行符时。 解决方法： 需要禁用git的自动换行功能： git config --global core.autocrlf false git config --global core.filemode false git config --global core.safecrlf true 三. 配置 SSH 公钥 推荐使用 SSH 协议来访问 Git 仓库。 1. 生成公钥 打开命令行终端输入 ssh-keygen -t rsa -b 4096 -C 输出如下信息，并提示，连续点击 Enter 键即可。 # Creates a new ssh key, using the provided email as a label # Generating public/private rsa key pair. Enter file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter] // 推荐使用默认地址 Enter passphrase (empty for no passphrase): //此处点击 Enter 键即可，也可以填写密码，填写密码后每次使用 SSH 方式推送代码时都会要求输入密码，由于这个 Key 也不是用于军事目的，所以也无需设置密码。 成功之后显示如下信息： Your identification has been saved in /Users/you/.ssh/id_rsa. # Your public key has been saved in /Users/you/.ssh/id_rsa.pub. # The key fingerprint is: # 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com 公钥文件id_rsa.pub创建成功后，默认是存储在用户目录.ssh中Window系统用户目录：C:\\Users\\Administrator\\.ssh\\id_rsa.pub 四. 分支管理 代码库中存在两个固定分支： master 主分支，只用于发布系统的正式版本； develop （默认）开发分支，日常的开发工作都只能在该分支上进行。 这两个分支都属于保护分支，禁止直接推送代码。 1. 克隆代码到本地 通过命令克隆代码到本地目录 git clone git@git.coding.net:xxx 2. 拉取最新代码 克隆下来的代码，默认为develop分支，首先保证该分支下的代码是最新的。使用如下命令从远程库中拉取最新代码到本地： git pull // 获取远端分支 git pull origin // 从远端拉去本地没有的分支并新建本地分支 git checkout -b newbranch origin/newbranch 2. 创建功能分支 由于不能直接在develop分支上修改代码，需要从develop分支上创建一个功能分支，命名为feature-xxx git checkout -b feature-xxx develop 现在可以在 feature-xxx 功能分支上进行开发。 3. 将修改的文件添加到缓存区 当我们新增或编辑了代码，我们需要将文件添加到缓存区。在命令行中执行以下命令: git add . 最后的“.”符号的意思是仓库下的“所有文件、文件夹和子文件夹”。假如我们只想要把特定文件添加到源代码控制中去，我们可以显示的指定它们，使用命令git add ： git add my_file, my_other_file 4. 提交文件改动 使用如下命令，将改动提交到本地HEAD区，此时还并没有同步到远程代码库： git commit -m \"代码提交信息\" 输入提交信息时，如果需要输入中文，则使用-m参数注意：提交我们的文件时，总是附带着有意义的注释，描述了它们现在的状态。 现在我们随时都可以回滚到这个提交状态。如果你有需要检查你现在的已加载（staged）和未加载（unstaged）文件的状态、提交等，你可以询问git的状态： git status 5. 推送到远程代码库 执行如下命令以将这些改动提交到远端仓库： git push origin feature-xxx 推送完成后在远程库中创建对应的合并请求，管理员会将新提交的代码合并到develop分支中。 6. 删除本地的feature分支 首先得切换回develop分支下： git checkout master 查看当前存在哪几个分支 git branch 强制删除分支 git branch -D feature-xxx 五. 合并分支 如果要将其他分支的修改合并到 master 分支。 先切换到 master 分支下 git checkout master 拉取 master 最新代码 git pull 进行合并 注意这里使用--squash参数，用来把一些不必要commit进行压缩 git merge --squash feature-xxx 提交合并后的代码 git commit -m \"修改xxx\" 最后推送到远程代码库 git push Git 暂存代码 git stash 取出暂存 git stash pop 1.添加tag 标签 git tag // 打标签 加上-a参数来创建一个带备注的tag，备注信息由-m指定。如果你未传入-m则创建过程系统会自动为你打开编辑器让你填写备注信息 git tag -a tagName -m \"my tag\" 2.列出已有的tag git tag 3.给指定的某个commit号加tag git tag -a v1.2 9fceb02 -m \"my tag\" 4.将tag同步到远程服务器 git push origin v1.0 5.推送所有： git push origin --tags "},"php/php.html":{"url":"php/php.html","title":"PHP","keywords":"","body":"我是PHP阶段 "},"php/h5chang-jian-wen-ti-wei-xin-cai-guo-de-keng.html":{"url":"php/h5chang-jian-wen-ti-wei-xin-cai-guo-de-keng.html","title":"H5常见问题 微信踩过得坑","keywords":"","body":"https://www.cnblogs.com/tonnytong/p/7929243.html h5常见的问题 微信踩过的坑 微信页面内 click事件 只在a链接的时候有效，如果是div或者span之类 一定要加上样式 cursor:pointer 点击事件才生效。 提交 ios软键盘失效fixed定位层的位置，上下两个fixed定位层，上面有一个input输入框，在ios中点击input触发软键盘的情况下，滑动页面fixed定位层的位置会失效。 解决： #weixin-wrapper{ position: absolute; top: px2em(50); bottom: px2em(50); left: 0; z-index: 1; width: 100%; overflow-y: scroll; -webkit-overflow-scrolling: touch; } 微信内页面 切换tab或者之前隐藏的文字，字会变大,在body加上下面这句,或者加max-height 可参考 https://github.com/amfe/article/issues/10 body{ -webkit-text-size-adjust: 100% !important; } H5页面窗口自动调整到设备宽度，并禁止用户缩放页面 1）HTML页面结构 // width 设置viewport宽度，为一个正整数，或字符串‘device-width’ // height 设置viewport高度，一般设置了宽度，会自动解析出高度，可以不用设置 // initial-scale 默认缩放比例，为一个数字，可以带小数 // minimum-scale 允许用户最小缩放比例，为一个数字，可以带小数 // maximum-scale 允许用户最大缩放比例，为一个数字，可以带小数 // user-scalable 是否允许手动缩放 2）JS动态判断 var phoneWidth = parseInt(window.screen.width); var phoneScale = phoneWidth/640; var ua = navigator.userAgent; if (/Android (\\d+\\.\\d+)/.test(ua)){ 　　var version = parseFloat(RegExp.$1); 　　if(version>2.3){ 　　　　document.write(''); 　　}else{ 　　　　document.write(''); 　　} } else { 　　document.write(''); } H5空白页基本meta标签 PC端基础meta标签 页面缓存设置 其他meta标签 移动端如何定义字体font-family @ -----------------中文字体的英文名称------ @ 宋体 SimSun @ 黑体 SimHei @ 微信雅黑 Microsoft Yahei @ 微软正黑体 Microsoft JhengHei @ 新宋体 NSimSun @ 新细明体 MingLiU @ 细明体 MingLiU @ 标楷体 DFKai-SB @ 仿宋 FangSong @ 楷体 KaiTi @ 仿宋_GB2312 FangSong_GB2312 @ 楷体_GB2312 KaiTi_GB2312 @ 说明：中文字体多数使用宋体、雅黑，英文用Helvetica body { font-family: Microsoft Yahei,SimSun,Helvetica; } 打电话发短信写邮件怎么实现 一、打电话 打电话给:0755-10086 二、发短信，winphone系统无效 发短信给: 10086 三、写邮件 注：在添加这些功能时，第一个功能以\"?\"开头，后面的以\"&\"开头 1.普通邮件 点击我发邮件 2.收件地址后添加?cc=开头，可添加抄送地址（Android存在兼容问题） 点击我发邮件 3.跟着抄送地址后，写上&bcc=,可添加密件抄送地址（Android存在兼容问题） 点击我发邮件 4.包含多个收件人、抄送、密件抄送人，用分号(;)隔开多个邮件人的地址 点击我发邮件 5.包含主题，用?subject= 点击我发邮件 6.包含内容，用?body=;如内容包含文本，使用%0A给文本换行 点击我发邮件 7.内容包含链接，含http(s)://等的文本自动转化为链接 点击我发邮件 8.内容包含图片（PC不支持） \">点击我发邮件 9.完整示例 \">点击我发邮件 移动端touch事件（区分webkit和winphone） /* 当用户手指放在移动设备在屏幕上滑动会触发的touch事件 */ // 以下支持webkit touchstart——当手指触碰屏幕时候发生。不管当前有多少只手指 touchmove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用event的preventDefault()可以阻止默认情况的发生：阻止页面滚动 touchend——当手指离开屏幕时触发 touchcancel——系统停止跟踪触摸时候会触发。例如在触摸过程中突然页面alert()一个提示框，此时会触发该事件，这个事件比较少用 //TouchEvent说明： touches：屏幕上所有手指的信息 targetTouches：手指在目标区域的手指信息 changedTouches：最近一次触发该事件的手指信息 touchend时，touches与targetTouches信息会被删除，changedTouches保存的最后一次的信息，最好用于计算手指信息 //参数信息(changedTouches[0]) clientX、clientY在显示区的坐标 target：当前元素 //事件响应顺序 ontouchstart > ontouchmove > ontouchend > onclick // 以下支持winphone 8 MSPointerDown——当手指触碰屏幕时候发生。不管当前有多少只手指 MSPointerMove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用css的html{-ms-touch-action: none;}可以阻止默认情况的发生：阻止页面滚动 MSPointerUp——当手指离开屏幕时触发 移动端click屏幕产生200-300ms的延时响应 说明：移动设备上的web网页是有300ms延迟的，玩玩会造成按钮点击延迟甚至是点击失效。 以下是历史原因，来源一个公司内一个同事的分享： 2007年苹果发布首款iphone上IOS系统搭载的safari为了将适用于PC端上大屏幕的网页能比较好的展示在手机端上，使用了双击缩放(double tap to zoom)的方案，比如你在手机上用浏览器打开一个PC上的网页， 你可能在看到页面内容虽然可以撑满整个屏幕，但是字体、图片都很小看不清，此时可以快速双击屏幕上的某一部分，你就能看清该部分放大后的内容，再次双击后能回到原始状态。 双击缩放是指用手指在屏幕上快速点击两次，iOS 自带的 Safari 浏览器会将网页缩放至原始比例。 原因就出在浏览器需要如何判断快速点击上，当用户在屏幕上单击某一个元素时候，例如跳转链接 ，此处浏览器会先捕获该次单击，但浏览器不能决定用户是单纯要点击链接还是要双击该部分区域进行缩放操作， 所以，捕获第一次单击后，浏览器会先Hold一段时间t，如果在t时间区间里用户未进行下一次点击，则浏览器会做单击跳转链接的处理，如果t时间里用户进行了第二次单击操作，则浏览器会禁止跳转，转而进行对该部分区域页面的缩放操作。那么这个时间区间t有多少呢？在IOS safari下，大概为300毫秒。这就是延迟的由来。造成的后果用户纯粹单击页面，页面需要过一段时间才响应，给用户慢体验感觉，对于web开发者来说是，页面js捕获click事件的回调函数处理，需要300ms后才生效，也就间接导致影响其他业务逻辑的处理。 //解决方案： fastclick可以解决在手机上点击事件的300ms延迟 zepto的touch模块，tap事件也是为了解决在click的延迟问题 Rentina显示屏原理及设计方案 说明：retina屏是一种具备超高像素密度的液晶屏，同样大小的屏幕上显示的像素点由1个变为多个，如在同样带下的屏幕上，苹果设备的retina显示屏中，像素点1个变为4个。 在高清显示屏中的位图被放大，图片会变得模糊，因此移动端的视觉稿通常会设计为传统PC的2倍。 那么，前端的应对方案是：设计稿切出来的图片长宽保证为偶数，并使用backgroud-size把图片缩小为原来的1/2 //例如图片宽高为：200px*200px，那么写法如下 .css{width:100px;height:100px;background-size:100px 100px;} //其它元素的取值为原来的1/2，例如视觉稿40px的字体，使用样式的写法为20px .css{font-size:20px} //image-set设计Rentina背景图 image-set,webkit私有属性，也是CSS4的属性，为解决Rentina屏幕下的图像而生。 .css { background: url(images/bg.jpg) no-repeat center; background: -webkit-image-set( url(images/bg.jpg) 1x, //支持image-set普通屏 url(images/bg-2x.jpg) 2x); //支持image-set的Rentinan } 点击元素产生背景或边框怎么去掉 //ios用户点击一个链接，会出现一个半透明灰色遮罩, 如果想要禁用，可设置-webkit-tap-highlight-color的alpha值为0去除灰色半透明遮罩； //android用户点击一个链接，会出现一个边框或者半透明灰色遮罩, 不同生产商定义出来额效果不一样，可设置-webkit-tap-highlight-color的alpha值为0去除部分机器自带的效果； //winphone系统,点击标签产生的灰色半透明背景，能通过设置 去掉； //特殊说明：有些机型去除不了，如小米2。对于按钮类还有个办法，不使用a或者input标签，直接用div标签 a,button,input,textarea { -webkit-tap-highlight-color: rgba(0,0,0,0); -webkit-user-modify:read-write-plaintext-only; //-webkit-user-modify有个副作用，就是输入法不再能够输入多个字符 } // 也可以 * { -webkit-tap-highlight-color: rgba(0,0,0,0); } //winphone下 美化表单元素 一、使用appearance改变webkit浏览器的默认外观 input,select { -webkit-appearance:none; appearance: none; } 二、winphone下，使用伪元素改变表单元素默认外观 1.禁用select默认箭头，::-ms-expand 修改表单控件下拉箭头，设置隐藏并使用背景图片来修饰 select::-ms-expand { display:none; } 2.禁用radio和checkbox默认样式，::-ms-check 修改表单复选框或单选框默认图标，设置隐藏并使用背景图片来修饰 input[type=radio]::-ms-check, input[type=checkbox]::-ms-check { display:none; } 3.禁用pc端表单输入框默认清除按钮，::-ms-clear修改清除按钮，设置隐藏并使用背景图片来修饰 input[type=text]::-ms-clear, input[type=tel]::-ms-clear, input[type=number]::-ms-clear { display:none; } 移动端字体单位font-size选择px还是rem 如需适配多种移动设备，建议使用rem。以下为参考值： html { font-size: 62.5%; } //10*16 = 62.5% 设置12px字体 这里注意在rem前要加上对应的px值，解决不支持rem的浏览器的兼容问题，做到优雅降级 body { font-size:12px; font-size:1.2rem; } 超实用的CSS样式 //去掉webkit的滚动条——display: none; //其他参数 ::-webkit-scrollba //滚动条整体部分 ::-webkit-scrollbar-thumb //滚动条内的小方块 ::-webkit-scrollbar-track //滚动条轨道 ::-webkit-scrollbar-button //滚动条轨道两端按钮 ::-webkit-scrollbar-track-piece //滚动条中间部分，内置轨道 ::-webkit-scrollbar-corner //边角，两个滚动条交汇处 ::-webkit-resizer //两个滚动条的交汇处上用于通过拖动调整元素大小的小控件 // 禁止长按链接与图片弹出菜单 a,img { -webkit-touch-callout: none } // 禁止ios和android用户选中文字 html,body {-webkit-user-select:none; user-select: none; } // 改变输入框placeholder的颜色值 ::-webkit-input-placeholder { /* WebKit browsers */ color: #999; } :-moz-placeholder { /* Mozilla Firefox 4 to 18 */ color: #999; } ::-moz-placeholder { /* Mozilla Firefox 19+ */ color: #999; } :-ms-input-placeholder { /* Internet Explorer 10+ */ color: #999; } input:focus::-webkit-input-placeholder{ color:#999; } // android上去掉语音输入按钮 input::-webkit-input-speech-button {display: none} // 阻止windows Phone的默认触摸事件 /*说明：winphone下默认触摸事件事件使用e.preventDefault是无效的，可通过样式来禁用，如：*/ html { -ms-touch-action:none; } //禁止winphone默认触摸事件 取消input在ios下，输入的时候英文首字母的默认大写 手机拍照和上传图片 //IOS有拍照、录像、选取本地图片功能，部分Android只有选择本地图片功能。Winphone不支持 屏幕旋转的事件和样式 //JS处理 function orientInit(){ var orientChk = document.documentElement.clientWidth > document.documentElement.clientHeight?'landscape':'portrait'; if(orientChk =='lapdscape'){ //这里是横屏下需要执行的事件 }else{ //这里是竖屏下需要执行的事件 } } orientInit(); window.addEventListener('onorientationchange' in window?'orientationchange':'resize', function(){ setTimeout(orientInit, 100); },false) //CSS处理 //竖屏时样式 @media all and (orientation:portrait){ } //横屏时样式 @media all and (orientation:landscape){ } audio元素和video元素在ios和andriod中无法自动 //音频，写法一 你的浏览器还不支持哦 //音频，写法二 优先播放音乐bg.ogg，不支持在播放bg.mp3 //JS绑定自动播放（操作window时，播放音乐） $(window).one('touchstart', function(){ music.play(); }) //微信下兼容处理 document.addEventListener(\"WeixinJSBridgeReady\", function () { music.play(); }, false); 小结 1.audio元素的autoplay属性在IOS及Android上无法使用，在PC端正常 2.audio元素没有设置controls时，在IOS及Android会占据空间大小，而在PC端Chrome是不会占据任何空间 重力感应事件 // 运用HTML5的deviceMotion，调用重力感应事件 if(window.DeviceMotionEvent){ document.addEventListener('devicemotion', deviceMotionHandler, false) } var speed = 30; var x = y = z = lastX = lastY = lastZ = 0; function deviceMotionHandler(eventData){ var acceleration = event.accelerationIncludingGravity; x = acceleration.x; y = acceleration.y; z = acceleration.z; if(Math.abs(x-lastX)>speed || Math.abs(y-lastY)>speed || Math.abs(z-lastZ)>speed ){ //这里是摇动后要执行的方法 yaoAfter(); } lastX = x; lastY = y; lastZ = z; } function yaoAfter(){ //do something } 微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整 //以下代码可使Android机页面不再受用户字体缩放强制改变大小，但是会有1S左右延时，期间可以考虑loading来处理 if (typeof(WeixinJSBridge) == \"undefined\") { document.addEventListener(\"WeixinJSBridgeReady\", function (e) { setTimeout(function(){ WeixinJSBridge.invoke('setFontSizeCallback', { 'fontSize':0}, function(res){ alert(JSON.stringify(res)); }) }, 0) }); }else{ setTimeout(function(){ WeixinJSBridge.invoke('setFontSizeCallback', { 'fontSize':0}, function(res){ alert(JSON.stringify(res)); }) }, 0) } //IOS下可使用 -webkit-text-size-adjust禁止用户调整字体大小 body { -webkit-text-size-adjust:100%!important; } //最好的解决方案：最好使用rem或百分比布局 定位的坑 //fixed定位 //1.ios下fixed元素容易定位出错，软键盘弹出时，影响fixed元素定位 //2.android下fixed表现要比iOS更好，软键盘弹出时，不会影响fixed元素定位 //3.ios4下不支持position:fixed //解决方案：使用[Iscroll](http://cubiq.org/iscroll-5)，如： ..... var myscroll; function loaded(){ myscroll=new iScroll(\"wrapper\"); } window.addEventListener(\"DOMContentLoaded\",loaded,false); //position定位 //Android下弹出软键盘弹出时，影响absolute元素定位 //解决方案: var ua = navigator.userAgent.indexOf('Android'); if(ua>-1){ $('.ipt').on('focus', function(){ $('.css').css({'visibility':'hidden'}) }).on('blur', function(){ $('.css').css({'visibility':'visible'}) }) } 播放视频不全屏 JS判断设备 function deviceType(){ var ua = navigator.userAgent; var agent = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"]; for(var i=0; i0){ break; } } } deviceType(); window.addEventListener('resize', function(){ deviceType(); }) JS判断微信浏览器 function isWeixin(){ var ua = navigator.userAgent.toLowerCase(); if(ua.match(/MicroMessenger/i)=='micromessenger'){ return true; }else{ return false; } } android 2.3 bug //1.@-webkit-keyframes 需要以0%开始100%结束，0%的百分号不能去掉 //2.after和before伪类无法使用动画animation //3.border-radius不支持%单位，如要兼容，可以给radius设置一下较大的值 //4.translate百分比的写法和scale在一起会导致失效，例如： -webkit-transform: translate(-50%,-50%) scale(-0.5, 1) android 4.x bug //1.三星 Galaxy S4中自带浏览器不支持border-radius缩写 //2.同时设置border-radius和背景色的时候，背景色会溢出到圆角以外部分 //3.部分手机(如三星)，a链接支持鼠标:visited事件，也就是说链接访问后文字变为紫色 //4.android无法同时播放多音频audio 消除transition闪屏 .css { -webkit-transform-style: preserve-3d; -webkit-backface-visibility: hidden; -webkit-perspective: 1000; } 开启硬件加速 //目前，像Chrome/Filefox/Safari/IE9+以及最新版本Opera都支持硬件加速，当检测到某个DOM元素应用了某些CSS规则时就会自动开启，从而解决页面闪白，保证动画流畅。 .css { -webkit-transform: translate3d(0,0,0); -moz-transform: translate3d(0,0,0); -ms-transform: translate3d(0,0,0); transform: translate3d(0,0,0); } 渲染优化 //1.禁止使用iframe（阻塞父文档onload事件） //2.禁止使用gif图片实现loading效果（降低CPU消耗，提升渲染性能） //使用CSS3代码代替JS动画； //开启GPU加速； //使用base64位编码图片(不小图而言，大图不建议使用) // 对于一些小图标，可以使用base64位编码，以减少网络请求。但不建议大图使用，比较耗费CPU。小图标优势在于： 　　　　//1.减少HTTP请求； 　　　　//2.避免文件跨域； //3.修改及时生效； 腾讯方案 var autoScale = function(){ var ratio = 320/504, //这是设计稿的宽高比（504是Iphone的高度去掉标题栏高度） winW = document.getElement.clientWidth, winH = document.getElement.clientHeight, ratio2 = winW/winH, scale; if(ratio window.addEventListener('onorientationchange' in window?'orientationchange':'resize', autoScale, false){ detectOrientatioin(); } //切换横竖屏 function detectOrientatioin(){ if(window.orientation==180 || window.orientation==0){ //竖屏 } if(window.orientation==90 || window.orientation==-90){ //横屏 } } "},"php/shi-yong-phpqrcode-sheng-cheng-er-wei-ma.html":{"url":"php/shi-yong-phpqrcode-sheng-cheng-er-wei-ma.html","title":"使用phpqrcode生成二维码","keywords":"","body":"使用phpqrcode生成二维码 前期准备: 1.phpqrcode类文件下载，下载地址： https://sourceforge.net/projects/phpqrcode/ 2.PHP环境必须开启支持GD2扩展库支持（一般情况下都是开启状态） 方法解读： 下载下来的类文件是一个压缩包，里边包含很多文件和演示程序，我们只需要里边的phpqrcode.php这一个文件就可以生成二维码了。它是一个多个类的集合文件，我们需要用到里边的QRcode类（第2963行）的png()方法（第3090行）： public static function png($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint=false) { $enc = QRencode::factory($level, $size, $margin); return $enc->encodePNG($text, $outfile, $saveandprint=false); } 第1个参数$text：二维码包含的内容，可以是链接、文字、json字符串等等； 第2个参数$outfile：默认为false，不生成文件，只将二维码图片返回输出；否则需要给出存放生成二维码图片的文件名及路径； 第3个参数$level：默认为L，这个参数可传递的值分别是L(QR_ECLEVEL_L，7%)、M(QR_ECLEVEL_M，15%)、Q(QR_ECLEVEL_Q，25%)、H(QR_ECLEVEL_H，30%)，这个参数控制二维码容错率，不同的参数表示二维码可被覆盖的区域百分比，也就是被覆盖的区域还能识别； 第4个参数$size：控制生成图片的大小，默认为4； 第5个参数$margin：控制生成二维码的空白区域大小； 第6个参数$saveandprint：保存二维码图片并显示出来，$outfile必须传递图片路径； 使用示例： 生成二维码(生成图片文件) function scerweima($url=''){ require_once 'phpqrcode.php'; $value = $url; //二维码内容 $errorCorrectionLevel = 'L'; //容错级别 $matrixPointSize = 5; //生成图片大小 //生成二维码图片 $filename = 'qrcode/'.microtime().'.png'; QRcode::png($value,$filename , $errorCorrectionLevel, $matrixPointSize, 2); $QR = $filename; //已经生成的原始二维码图片文件 $QR = imagecreatefromstring(file_get_contents($QR)); //输出图片 imagepng($QR, 'qrcode.png'); imagedestroy($QR); return ''; } //调用查看结果 echo scerweima('https://www.baidu.com'); 2.在生成的二维码中加上logo(生成图片文件) function scerweima1($url=''){ require_once 'phpqrcode.php'; $value = $url; //二维码内容 $errorCorrectionLevel = 'H'; //容错级别 $matrixPointSize = 6; //生成图片大小 //生成二维码图片 $filename = 'qrcode/'.microtime().'.png'; QRcode::png($value,$filename , $errorCorrectionLevel, $matrixPointSize, 2); $logo = 'qrcode/logo.jpg'; //准备好的logo图片 $QR = $filename; //已经生成的原始二维码图 if (file_exists($logo)) { $QR = imagecreatefromstring(file_get_contents($QR)); //目标图象连接资源。 $logo = imagecreatefromstring(file_get_contents($logo)); //源图象连接资源。 $QR_width = imagesx($QR); //二维码图片宽度 $QR_height = imagesy($QR); //二维码图片高度 $logo_width = imagesx($logo); //logo图片宽度 $logo_height = imagesy($logo); //logo图片高度 $logo_qr_width = $QR_width / 4; //组合之后logo的宽度(占二维码的1/5) $scale = $logo_width/$logo_qr_width; //logo的宽度缩放比(本身宽度/组合后的宽度) $logo_qr_height = $logo_height/$scale; //组合之后logo的高度 $from_width = ($QR_width - $logo_qr_width) / 2; //组合之后logo左上角所在坐标点 //重新组合图片并调整大小 /* * imagecopyresampled() 将一幅图像(源图象)中的一块正方形区域拷贝到另一个图像中 */ imagecopyresampled($QR, $logo, $from_width, $from_width, 0, 0, $logo_qr_width,$logo_qr_height, $logo_width, $logo_height); } //输出图片 imagepng($QR, 'qrcode.png'); imagedestroy($QR); imagedestroy($logo); return ''; } //调用查看结果 echo scerweima1('https://www.baidu.com'); 生成二维码(不生成图片文件) function scerweima2($url=''){ require_once 'phpqrcode.php'; $value = $url; //二维码内容 $errorCorrectionLevel = 'L'; //容错级别 $matrixPointSize = 5; //生成图片大小 //生成二维码图片 $QR = QRcode::png($value,false,$errorCorrectionLevel, $matrixPointSize, 2); } //调用查看结果 scerweima2('https://www.baidu.com'); *前两种方法，每调用一次都会在本地生成一张二维码图片，第三种方法，不生成文件，会直接输出二维码到浏览器中。 "},"php/shi-jian-chuo.html":{"url":"php/shi-jian-chuo.html","title":"时间戳","keywords":"","body":"时间戳 1.PHP时间戳函数将日期转化为unix时间戳 echo \"世界末日时间戳为：\".strtotime(\"2012-12-21\") 2.将时间戳转化为系统时间 date('Y-m-d H:i:s',\"1228348800\"); （1）获取当天零点时间戳 $timetoday = strtotime(date(\"Y-m-d\",time())); （2）获取明天零点时间戳 $tomorrow = $timetoday + 3600*24; 3.PHP时间戳函数获取英文文本日期时间 示例如下： 便于比较，使用date将当时间戳与指定时间戳转换成系统时间 (1)打印明天此时的时间戳strtotime(”+1 day”) //当前时间 echo date(\"Y-m-d H:i:s\",time()); //明天此时时间 echo date(\"Y-m-d H:i:s\",strtotime(\"+1 day\")); (2)打印昨天此时的时间戳strtotime(”-1 day”) //当前时间 echo date(\"Y-m-d H:i:s\",time()) ; //指定时间 echo date(\"Y-m-d H:i:s\",strtotime(\"-1 day\")); (3)打印下个星期此时的时间戳strtotime(\"+1 week\") //当前时间 echo date(\"Y-m-d H:i:s\",time()); //下星期时间 echo date(\"Y-m-d H:i:s\",strtotime(\"+1 week\")); (4)打印上个星期此时的时间戳strtotime(\"-1 week\") //当前时间 echo date(\"Y-m-d H:i:s\",time()); //上个星期此时时间 echo date(\"Y-m-d H:i:s\",strtotime(\"-1 week\")); (5)打印指定下星期几的时间戳strtotime(\"next Thursday\") //当前时间 echo date(\"Y-m-d H:i:s\",time()); //下星期几时间 echo date(\"Y-m-d H:i:s\",strtotime(\"next Thursday\")); (6)打印指定上星期几的时间戳strtotime(”last Thursday”) //当前时间 echo date(\"Y-m-d H:i:s\",time()); //指定时间 echo date(\"Y-m-d H:i:s\",strtotime(\"last Thursday\")); /** * 友好时间显示 * @param $time * @return bool|string */ function friend_date($time) { if (!$time) return false; $fdate = ''; $d = time() - intval($time); $ld = $time - mktime(0, 0, 0, 0, 0, date('Y')); //得出年 $md = $time - mktime(0, 0, 0, date('m'), 0, date('Y')); //得出月 $byd = $time - mktime(0, 0, 0, date('m'), date('d') - 2, date('Y')); //前天 $yd = $time - mktime(0, 0, 0, date('m'), date('d') - 1, date('Y')); //昨天 $dd = $time - mktime(0, 0, 0, date('m'), date('d'), date('Y')); //今天 $td = $time - mktime(0, 0, 0, date('m'), date('d') + 1, date('Y')); //明天 $atd = $time - mktime(0, 0, 0, date('m'), date('d') + 2, date('Y')); //后天 if ($d == 0) { $fdate = '刚刚'; } else { switch ($d) { case $d "},"go.html":{"url":"go.html","title":"GO","keywords":"","body":"GoLang 学习 "},"wechat.html":{"url":"wechat.html","title":"小程序","keywords":"","body":"我是小程序 "},"wei-xin-xiao-cheng-xu-ff0c-ru-he-zai-fan-hui-qian-yi-ge-ye-mian-shi-ff0c-zhi-xing-qian-yi-ge-ye-mian-de-fang-fa.html":{"url":"wei-xin-xiao-cheng-xu-ff0c-ru-he-zai-fan-hui-qian-yi-ge-ye-mian-shi-ff0c-zhi-xing-qian-yi-ge-ye-mian-de-fang-fa.html","title":"微信小程序，如何在返回前一个页面时，执行前一个页面的方法","keywords":"","body":"微信小程序，如何在返回前一个页面时，执行前一个页面的方法 var pages = getCurrentPages(); // 当前页面 var beforePage = pages[pages.length - 2]; // 前一个页面 // console.log(\"beforePage\"); // console.log(beforePage); wx.navigateBack({ success: function() { beforePage.onLoad(); // 执行前一个页面的onLoad方法 } }); "},"ge-lei-xiao-xi-ti-xing.html":{"url":"ge-lei-xiao-xi-ti-xing.html","title":"各类消息提醒","keywords":"","body":"各类消息提醒 1.消息提示——wx.showToast(OBJECT) //show.js //获取应用实例 var app = getApp() Page({ showok:function() { wx.showToast({ title: '成功', icon: 'success', duration: 2000 }) } }) 2.模态弹窗——wx.showModal(OBJECT) //show.js //获取应用实例 var app = getApp() Page({ modalcnt:function(){ wx.showModal({ title: '提示', content: '这是一个模态弹窗', success: function(res) { if (res.confirm) { console.log('用户点击确定') } else if (res.cancel) { console.log('用户点击取消') } } }) } }) 3.操作菜单——wx.showActionSheet(OBJECT) //show.js //获取应用实例 var app = getApp() Page({ actioncnt:function(){ wx.showActionSheet({ itemList: ['A', 'B', 'C'], success: function(res) { console.log(res.tapIndex) }, fail: function(res) { console.log(res.errMsg) } }) } }) 4.指定modal弹出 指定哪个modal,可以通过hidden属性来进行选择。 modal有输入框 //show.js //获取应用实例 var app = getApp() Page({ data:{ hiddenmodalput:true, //可以通过hidden是否掩藏弹出框的属性，来指定那个弹出框 }, //点击按钮痰喘指定的hiddenmodalput弹出框 modalinput:function(){ this.setData({ hiddenmodalput: !this.data.hiddenmodalput }) }, //取消按钮 cancel: function(){ this.setData({ hiddenmodalput: true }); }, //确认 confirm: function(){ this.setData({ hiddenmodalput: true }) } }) "}}